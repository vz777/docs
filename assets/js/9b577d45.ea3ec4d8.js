"use strict";(self.webpackChunkthelia=self.webpackChunkthelia||[]).push([[7026],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>d});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=s(t),d=o,f=p["".concat(c,".").concat(d)]||p[d]||u[d]||a;return t?r.createElement(f,i(i({ref:n},m),{},{components:t})):r.createElement(f,i({ref:n},m))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},865:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const a={title:"Commands",sidebar_position:11},i=void 0,l={unversionedId:"commands/index",id:"commands/index",title:"Commands",description:"Les commandes utilisent le tr\xe8s pratique, composant console de Symfony. Dans votre module, vous pouvez d\xe9finir votre propre commande qui peut \xeatre utilis\xe9e avec la ligne de commande (CLI).",source:"@site/docs/commands/index.md",sourceDirName:"commands",slug:"/commands/",permalink:"/docs/docs/commands/",draft:!1,editUrl:"https://github.com/vz777/docs/edit/main/docs/commands/index.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"Commands",sidebar_position:11},sidebar:"myAutogeneratedSidebar",previous:{title:"Forms",permalink:"/docs/docs/forms"},next:{title:"admin:create",permalink:"/docs/docs/commands/admin_create"}},c={},s=[],m={toc:s};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Les commandes utilisent le tr\xe8s pratique, composant console de Symfony. Dans votre module, vous pouvez d\xe9finir votre propre commande qui peut \xeatre utilis\xe9e avec la ligne de commande (CLI)."),(0,o.kt)("p",null,"Pour cr\xe9er une commande dans Thelia, cr\xe9ez simplement une nouvelle classe qui \xe9tend ",(0,o.kt)("inlineCode",{parentName:"p"},"Thelia\\Command\\ContainerAwareCommand")," et cr\xe9ez ces fonctions :"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"configure()")," pour donner un nom et \xe9ventuellement une description et des param\xe8tres"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"execute()")," o\xf9 se trouve le code \xe0 ex\xe9cuter")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},'<?php\n\nnamespace MyModule\\Commands;\n\nuse Symfony\\Component\\Console\\Input\\InputInterface;\nuse Symfony\\Component\\Console\\Output\\OutputInterface;\n\nuse Thelia\\Command\\ContainerAwareCommand;\n\nclass HelloWorld extends ContainerAwareCommand\n{\n    protected function configure()\n    {\n        $this\n            ->setName("hello:world")\n            ->setDescription("output hello world");\n    }\n\n    protected function execute(InputInterface $input, OutputInterface $output)\n    {\n        $output->writeln("Hello world !");\n    }\n}\n')),(0,o.kt)("p",null,"Vous pouvez maintenant tester les r\xe9sultats \xe0 l'aide des outils de ligne de commande Thelia. Allez dans le r\xe9pertoire racine de votre Thelia et utilisez cette commande :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"php Thelia hello:world\n")),(0,o.kt)("p",null,'Thelia utilise toutes les fonctionnalit\xe9s du composant "command" de Symfony. Vous pouvez donc vous r\xe9f\xe9rer \xe0 ce ',(0,o.kt)("a",{parentName:"p",href:"https://symfony.com/doc/current/console.html#creating-a-command"},"composant")," pour cr\xe9er vos commandes Thelia."))}u.isMDXComponent=!0}}]);
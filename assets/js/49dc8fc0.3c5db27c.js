"use strict";(self.webpackChunkthelia=self.webpackChunkthelia||[]).push([[6030],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},o=Object.keys(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=l.createContext({}),s=function(e){var t=l.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return l.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},c=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=s(n),m=a,f=c["".concat(u,".").concat(m)]||c[m]||d[m]||o;return n?l.createElement(f,r(r({ref:t},p),{},{components:n})):l.createElement(f,r({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=c;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,r[1]=i;for(var s=2;s<o;s++)r[s]=n[s];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5351:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var l=n(7462),a=(n(7294),n(3905));const o={title:"Loops"},r=void 0,i={unversionedId:"loops/index",id:"loops/index",title:"Loops",description:"Les boucles sont la fonctionnalit\xe9 la plus pratique dans Thelia pour les d\xe9veloppeurs front-end. Les boucles permettent d'obtenir des donn\xe9es depuis votre back-office de boutique et de les afficher dans votre vue frontale. Dans Thelia, les boucles sont un plugin Smarty.",source:"@site/docs/loops/index.md",sourceDirName:"loops",slug:"/loops/",permalink:"/docs/docs/loops/",draft:!1,editUrl:"https://github.com/vz777/docs/edit/main/docs/loops/index.md",tags:[],version:"current",frontMatter:{title:"Loops"},sidebar:"myAutogeneratedSidebar",previous:{title:"{url}",permalink:"/docs/docs/smarty_plugins/{url}"},next:{title:"Arguments communs",permalink:"/docs/docs/loops/global_arguments"}},u={},s=[{value:"Boucle classique",id:"boucle-classique",level:3},{value:"Boucle conditionnelle",id:"boucle-conditionnelle",level:3},{value:"Boucle de page",id:"boucle-de-page",level:3},{value:"Impl\xe9menter vos boucles",id:"impl\xe9menter-vos-boucles",level:2},{value:"Boucle de tableau",id:"boucle-de-tableau",level:2},{value:"Boucle Propel",id:"boucle-propel",level:2},{value:"Types d&#39;arguments",id:"types-darguments",level:2},{value:"Options",id:"options",level:2}],p={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,l.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Les boucles sont la fonctionnalit\xe9 la plus pratique dans Thelia pour les d\xe9veloppeurs front-end. Les boucles permettent d'obtenir des donn\xe9es depuis votre back-office de boutique et de les afficher dans votre vue frontale. Dans Thelia, les boucles sont un plugin Smarty."),(0,a.kt)("h3",{id:"boucle-classique"},"Boucle classique"),(0,a.kt)("p",null,"Voici un extrait de code HTML qui a l'intention de r\xe9pertorier 4 produits al\xe9atoires de votre boutique."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<div>\n    <div class="product-block">\n        PRODUCT 0 (ref : 0535233)<br />\n        The ideal product to have fun.<br />\n        <strong>Afford it for 70 \u20ac</strong>\n    </div>\n    <div class="product-block">\n        PRODUCT 1 (ref : 1245152)<br />\n        A very beautiful product to make you happy.<br />\n        <strong>Afford it for only 10 \u20ac (instead of 100) !</strong>\n    </div>\n    <div class="product-block">\n        PRODUCT 2 (ref : 9437252)<br />\n        A perfect product to procrastinate.<br />\n        <strong>Afford it for 20 \u20ac</strong>\n    </div>\n    <div class="product-block">\n        PRODUCT 4 (ref : 3566236)<br />\n        The product which will change your life.<br />\n        <strong>Afford it for only 1 000 \u20ac (instead of 1 000 000) !</strong>\n    </div>\n</div>\n')),(0,a.kt)("p",null,"Comment rendre ce morceau de code dynamique ? Rassembler les produits que vous avez configur\xe9s dans votre back-office Thelia ?"),(0,a.kt)("p",null,"Il suffit d'utiliser une boucle de produits Thelia :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-smarty"},'<div>\n    {loop type="product" name="my_product_loop" limit="4" order="random"}\n        <div class="product-block">\n            {$TITLE} (ref : {$REF})<br />\n            {$DESCRIPTION}<br />\n            <strong>\n                {if $IS_PROMO == 1}\n                    Afford it for only {$PROMO_PRICE} \u20ac (instead of {$PRICE}) !\n                {else}\n                    Afford it for {$PRICE} \u20ac\n                {/if}\n            </strong>\n        </div>\n    {/loop}\n</div>\n')),(0,a.kt)("p",null,"Et si vous ne voulez que les produits que vous avez \xe9tiquet\xe9s comme nouveaux ? Et qui sont de la cat\xe9gorie 3 et 5 ? Et dont le prix est d'au moins 100 \u20ac ?"),(0,a.kt)("p",null,"Pas de probl\xe8me ! Voici comment faire :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-smarty"},'<div>\n    {loop type="product" name="my_product_loop" limit="4" order="random" new="true" category="3,5" min_price="100"}\n        <div class="product-block">\n            [...]\n        </div>\n    {/loop}\n</div>\n')),(0,a.kt)("p",null,"Vous pouvez bien s\xfbr utiliser une boucle dans une autre boucle et transmettre la sortie d'une boucle \xe0 un autre param\xe8tre de boucle."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-smarty"},'<div>\n    {loop type="category" name="my_category_loop"}\n        <h2>{$TITLE}</h2>\n        {loop type="product" name="my_product_loop" category="{$ID}"}\n            <div class="product-block">\n                [...]\n            </div>\n        {/loop}\n    {/loop}\n</div>\n')),(0,a.kt)("p",null,"Thelia propose de nombreux types de boucles. Vous pouvez voir toutes les boucles et leurs param\xe8tres / sorties dans le menu lat\xe9ral ",(0,a.kt)("strong",null,"Loops"),"."),(0,a.kt)("h3",{id:"boucle-conditionnelle"},"Boucle conditionnelle"),(0,a.kt)("p",null,"Les boucles conditionnelles sont utilis\xe9es pour d\xe9finir un comportement diff\xe9rent en fonction de la mani\xe8re dont une boucle classique affiche quelque chose ou non."),(0,a.kt)("p",null,"Une boucle conditionnelle est donc li\xe9e \xe0 une boucle classique \xe0 l'aide de l'attribut ",(0,a.kt)("inlineCode",{parentName:"p"},"rel"),", qui doit correspondre \xe0 l'attribut ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," d'une boucle classique."),(0,a.kt)("p",null,"Par exemple, vous voulez afficher tout le contenu associ\xe9 d'un produit dans une liste non ordonn\xe9e (ul). Si le produit n'a pas de contenu associ\xe9, vous ne souhaitez pas afficher de ",(0,a.kt)("inlineCode",{parentName:"p"},"<ul></ul>")," vide. Et vous voulez un message pour indiquer qu'il n'y a pas de contenu disponible. Vous pouvez utiliser une boucle conditionnelle pour cela."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-smarty"},'{ifloop rel="my_associated_content_loop"}\n    Associated contents for this product :\n    <ul>\n        {loop type="associated_content" name="my_associated_content_loop" product="12"}\n            <li>\n                <a href="{$URL}">{$TITLE}</a>\n            </li>\n        {/loop}\n    </ul>\n{/ifloop}\n{elseloop rel="my_associated_content_loop"}\n    No associated content for this product\n{/elseloop}\n')),(0,a.kt)("h3",{id:"boucle-de-page"},"Boucle de page"),(0,a.kt)("p",null,"Les boucles de page peuvent \xeatre utilis\xe9es sur n'importe quelle boucle classique qui a le param\xe8tre ",(0,a.kt)("inlineCode",{parentName:"p"},"page"),". Les boucles de page r\xe9pertorient toutes les pages n\xe9cessaires \xe0 la boucle classique pour afficher tous ses r\xe9sultats."),(0,a.kt)("p",null,"Une boucle de page est donc li\xe9e \xe0 une boucle classique \xe0 l'aide de l'attribut ",(0,a.kt)("inlineCode",{parentName:"p"},"rel"),", qui doit correspondre \xe0 l'attribut ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," d'une boucle classique."),(0,a.kt)("p",null,"Par d\xe9faut, 10 pages sont affich\xe9es. Vous pouvez modifier cette valeur \xe0 l'aide du param\xe8tre ",(0,a.kt)("inlineCode",{parentName:"p"},"limit"),"."),(0,a.kt)("p",null,"Liste des param\xe8tres de sortie :"),(0,a.kt)("div",{class:"table-responsive"},(0,a.kt)("table",{class:"table table-striped table-bordered"},(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"Variable"),(0,a.kt)("th",null,"Description"))),(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"$PAGE"),(0,a.kt)("td",null,"Current page number. This value is equal to the ```page``` loop parameter.")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"$END"),(0,a.kt)("td",null,"The last displayed page number")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"$CURRENT"),(0,a.kt)("td",null,"on each loop, this value is incremented. So it's started with the $PAGE value and end with the $END value")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"$LAST"),(0,a.kt)("td",null,"Max page number. If a loop generates 761 pages, the value of $LAST is 761")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"$PREV"),(0,a.kt)("td",null,"previous page number. This value is always $PAGE-1 if $PAGE is greater than 1. The value is 1 therefore")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"$NEXT"),(0,a.kt)("td",null,"next page number. This value is always $PAGE+1 if $PAGE is less than $LAST. The value is $LAST therefore"))))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-smarty"},'<div class="text-center">\n    <ul class="pagination pagination-centered">\n    {pageloop rel="customer_list" limit="20"}\n        {if $PAGE == $CURRENT && $PAGE > 2}\n            <li><a href="{url path="/admin/customers" page=$PREV}">&lsaquo;</a></li>\n        {/if}\n\n        {if $PAGE != $CURRENT}\n            <li><a href="{url path="/admin/customers" page="{$PAGE}"}">{$PAGE}</a></li>\n\n        {else}\n            <li class="active"><a href="#">{$PAGE}</a></li>\n        {/if}\n\n        {if $PAGE == $END && $PAGE < $LAST}\n            <li><a href="{url path="/admin/customers" page=$NEXT}">&rsaquo;</a></li>\n        {/if}\n    {/pageloop}\n    </ul>\n</div>\n')),(0,a.kt)("h2",{id:"impl\xe9menter-vos-boucles"},"Impl\xe9menter vos boucles"),(0,a.kt)("p",null,"Votre boucle peut \xeatre n'importe o\xf9 (gr\xe2ce \xe0 l'espace de noms) dans votre module, mais il est pr\xe9f\xe9rable de cr\xe9er un r\xe9pertoire Loop et d'y mettre toutes vos boucles."),(0,a.kt)("p",null,"La seule chose \xe0 faire est de cr\xe9er une nouvelle classe qui \xe9tend la classe ",(0,a.kt)("inlineCode",{parentName:"p"},"Thelia\\Core\\Template\\Element\\BaseLoop")," et d'impl\xe9menter l'une de ces interfaces :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Thelia\\Core\\Template\\Element\\ArraySearchLoopInterface")," pour une ",(0,a.kt)("a",{parentName:"li",href:"#boucle-de-tableau"},"Boucle de tableau")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Thelia\\Core\\Template\\Element\\PropelSearchLoopInterface")," pour une ",(0,a.kt)("a",{parentName:"li",href:"#boucle-propel"},"Boucle Propel"),".")),(0,a.kt)("p",null,"NB : Au lieu de ",(0,a.kt)("inlineCode",{parentName:"p"},"BaseLoop")," vous pouvez \xe9tendre ",(0,a.kt)("inlineCode",{parentName:"p"},"BaseI18nLoop"),". Cela fournira des outils pour g\xe9rer l'internationalisation dans votre boucle."),(0,a.kt)("p",null,"Le type de votre boucle sera le nom de classe en snake_case. Par exemple, le ",(0,a.kt)("inlineCode",{parentName:"p"},"type")," de ",(0,a.kt)("inlineCode",{parentName:"p"},"MyLoop.php")," sera ",(0,a.kt)("inlineCode",{parentName:"p"},"my_loop"),"\nAinsi, pour l'appeler dans le template : ",(0,a.kt)("inlineCode",{parentName:"p"},'{loop type="my_loop" name="a_loop_name"}{/loop}')),(0,a.kt)("h2",{id:"boucle-de-tableau"},"Boucle de tableau"),(0,a.kt)("p",null,"Si les donn\xe9es de votre boucle ne proviennent pas directement d'un model, utilisez une boucle de tableau.\nTrois fonctions doivent \xeatre impl\xe9ment\xe9es :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"getArgDefinitions")," pour d\xe9crire quels ",(0,a.kt)("a",{parentName:"li",href:"#types-darguments"},"arguments")," sont disponibles pour votre boucle"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"buildArray")," qui rassemble les donn\xe9es pour les param\xe8tres d\xe9finis"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"parseResults")," pour attribuer des donn\xe9es \xe0 des variables Smarty pour chaque it\xe9ration de boucle")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"}," <?php\n namespace MyModule\\Loop;\n\n use Thelia\\Core\\Template\\Element\\BaseLoop;\n use Thelia\\Core\\Template\\Element\\LoopResult;\n use Thelia\\Core\\Template\\Element\\LoopResultRow;\n use Thelia\\Core\\Template\\Element\\ArraySearchLoopInterface;\n use Thelia\\Core\\Template\\Loop\\Argument\\ArgumentCollection;\n use Thelia\\Core\\Template\\Loop\\Argument\\Argument;\n\n class MyLoop extends BaseLoop implements ArraySearchLoopInterface {\n\n    public $countable = true;\n    public $timestampable = false;\n    public $versionable = false;\n\n     public function getArgDefinitions()\n     {\n         // Always return an ArgumentCollection\n         return new ArgumentCollection(\n             Argument::createIntListTypeArgument('start', 0),\n             Argument::createIntListTypeArgument('stop', null, true)\n         );\n     }\n\n     public function buildArray()\n     {\n         $items = [];\n\n         // These magics methods will get the loop arguments \"start\" and \"stop\"\n         $start = $this->getStart();\n         $stop = $this->getStop();\n\n         // Get the data from where you want\n         for ( $i = $start; $i <= $stop; $i++) {\n            $items[] = [\n                'number' => $i,\n                'numberNext' => $i + 1\n            ];\n         }\n\n         return $items;\n     }\n\n     public function parseResults(LoopResult $loopResult)\n     {\n         // \"getResultDataCollection\" return an iterator that contain the items given by \"buildArray\"\n         foreach ($loopResult->getResultDataCollection() as $item) {\n             // Create a new result\n             $loopResultRow = new LoopResultRow();\n\n             // Assign variable that will be accessible in smarty by $CURRENT_NUMBER for Exemple\n             $loopResultRow->set(\"CURRENT_NUMBER\", $item['number']);\n             $loopResultRow->set(\"NEXT_NUMBER\", $item['numberNext']);\n\n             // Add the result to loop result list\n             $loopResult->addRow($loopResultRow);\n         }\n\n         return $loopResult;\n     }\n }\n")),(0,a.kt)("h2",{id:"boucle-propel"},"Boucle Propel"),(0,a.kt)("p",null,"Si les donn\xe9es de votre boucle proviennent directement d'un model, utilisez une boucle Propel.\nTrois fonctions doivent \xeatre impl\xe9ment\xe9es :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"getArgDefinitions")," pour d\xe9crire quels ",(0,a.kt)("a",{parentName:"li",href:"#types-darguments"},"arguments")," sont disponibles pour votre boucle"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"buildModelCriteria")," qui construit une requ\xeate Propel \xe0 ex\xe9cuter"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"parseResults")," pour attribuer des donn\xe9es \xe0 des variables Smarty pour chaque it\xe9ration de boucle")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\nnamespace Thelia\\Core\\Template\\Loop;\n\nuse Propel\\Runtime\\ActiveQuery\\Criteria;\nuse Thelia\\Core\\Template\\Element\\BaseLoop;\nuse Thelia\\Core\\Template\\Element\\LoopResult;\nuse Thelia\\Core\\Template\\Element\\LoopResultRow;\nuse Thelia\\Core\\Template\\Element\\PropelSearchLoopInterface;\nuse Thelia\\Core\\Template\\Loop\\Argument\\Argument;\nuse Thelia\\Core\\Template\\Loop\\Argument\\ArgumentCollection;\nuse Thelia\\Model\\Admin as AdminModel;\nuse Thelia\\Model\\AdminQuery;\n\nclass Admin extends BaseLoop implements PropelSearchLoopInterface\n{\n    protected function getArgDefinitions()\n    {\n         // Always return an ArgumentCollection\n        return new ArgumentCollection(\n            Argument::createIntListTypeArgument('id'),\n            Argument::createIntListTypeArgument('profile')\n        );\n    }\n\n    public function buildModelCriteria()\n    {\n        $search = AdminQuery::create();\n\n         // This magic method will get the loop argument \"id\"\n        $id = $this->getId();\n        if (null !== $id) {\n            $search->filterById($id, Criteria::IN);\n        }\n\n        $profile = $this->getProfile();\n        if (null !== $profile) {\n            $search->filterByProfileId($profile, Criteria::IN);\n        }\n\n        $search->orderByFirstname(Criteria::ASC);\n\n        // Don't execute the query, only return it\n        return $search;\n    }\n\n    public function parseResults(LoopResult $loopResult)\n    {\n        /** @var AdminModel $admin */\n        foreach ($loopResult->getResultDataCollection() as $admin) {\n             // Create a new result\n            $loopResultRow = new LoopResultRow($admin);\n\n             // Assign variable that will be accessible in smarty by $PROFILE for Exemple\n            $loopResultRow->set('ID', $admin->getId())\n                ->set('PROFILE', $admin->getProfileId())\n                ->set('FIRSTNAME', $admin->getFirstname())\n                ->set('LASTNAME', $admin->getLastname())\n                ->set('LOGIN', $admin->getLogin())\n                ->set('LOCALE', $admin->getLocale())\n                ->set('EMAIL', $admin->getEmail())\n            ;\n            $this->addOutputFields($loopResultRow, $admin);\n\n             // Add the result to loop result list\n            $loopResult->addRow($loopResultRow);\n        }\n\n        return $loopResult;\n    }\n}\n")),(0,a.kt)("h2",{id:"types-darguments"},"Types d'arguments"),(0,a.kt)("p",null,"Dans la classe ",(0,a.kt)("inlineCode",{parentName:"p"},"Argument"),", vous avez plusieurs fonctions statiques qui vous aideront \xe0 sp\xe9cifier le type d'argument attendu."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"function"),(0,a.kt)("th",{parentName:"tr",align:"left"},"argument accepted"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"createAnyTypeArgument()"),(0,a.kt)("td",{parentName:"tr",align:"left"},"N'importe quoi")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"createIntTypeArgument()"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Seulement un int")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"createFloatTypeArgument()"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Seulement un float")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"createBooleanTypeArgument()"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Seulement un bool\xe9en")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"createBooleanOrBothTypeArgument()"),(0,a.kt)("td",{parentName:"tr",align:"left"},'Un bool\xe9en ou "*" pour les deux')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"createIntListTypeArgument()"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Une liste d'int s\xe9par\xe9s par une virgule")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"createAnyListTypeArgument()"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Une liste de n'importe quoi s\xe9par\xe9e par une virgule")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"createAlphaNumStringTypeArgument()"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Une cha\xeene alphanum\xe9rique")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"createAlphaNumStringListTypeArgument()"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Une liste de cha\xeenes alphanum\xe9riques s\xe9par\xe9es par une virgule")))),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("p",null,"La classe BaseLoop d\xe9clare 3 propri\xe9t\xe9s publiques que vous pouvez surcharger dans votre nouvelle boucle."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"public $countable = true;\npublic $timestampable = false;\n")),(0,a.kt)("p",null,"Avec ces propri\xe9t\xe9s d\xe9finies sur true, la boucle rendra automatiquement - ou non - les Sorties suivantes :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"if($countable === true)\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"LOOP_COUNT")," Le num\xe9ro d'it\xe9ration actuel (commence \xe0 partir de 1)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"LOOP_TOTAL")," Total des \xe9l\xe9ments dans la boucle actuelle")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"if($timestampable === true) //available if your table is timestampable\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"CREATE_DATE"),"  Date de cr\xe9ation"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"UPDATE_DATE"),"  Date de la derni\xe8re mise \xe0 jour")))}d.isMDXComponent=!0}}]);
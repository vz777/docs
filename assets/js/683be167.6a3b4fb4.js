"use strict";(self.webpackChunkthelia=self.webpackChunkthelia||[]).push([[9259],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>f});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=t.createContext({}),m=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},u=function(e){var r=m(e.components);return t.createElement(s.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=m(n),f=a,c=p["".concat(s,".").concat(f)]||p[f]||d[f]||o;return n?t.createElement(c,l(l({ref:r},u),{},{components:n})):t.createElement(c,l({ref:r},u))}));function f(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=p;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var m=2;m<o;m++)l[m]=n[m];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7697:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>m});var t=n(7462),a=(n(7294),n(3905));const o={title:"Forms",sidebar_position:10},l=void 0,i={unversionedId:"forms",id:"forms",title:"Forms",description:"D\xe9finitions des formulaires",source:"@site/docs/forms.md",sourceDirName:".",slug:"/forms",permalink:"/docs/docs/forms",draft:!1,editUrl:"https://github.com/vz777/docs/edit/main/docs/forms.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Forms",sidebar_position:10},sidebar:"myAutogeneratedSidebar",previous:{title:"Events",permalink:"/docs/docs/events"},next:{title:"Commands",permalink:"/docs/docs/commands/"}},s={},m=[{value:"D\xe9finitions des formulaires",id:"d\xe9finitions-des-formulaires",level:2},{value:"Utilisation dans les templates",id:"utilisation-dans-les-templates",level:2},{value:"Appeler votre formulaire",id:"appeler-votre-formulaire",level:3},{value:"Afficher le formulaire",id:"afficher-le-formulaire",level:3},{value:"Affichage d&#39;un champ de formulaire",id:"affichage-dun-champ-de-formulaire",level:3},{value:"Champ de formulaire personnalis\xe9",id:"champ-de-formulaire-personnalis\xe9",level:4},{value:"Champ de formulaire automatique",id:"champ-de-formulaire-automatique",level:4},{value:"Afficher les erreurs",id:"afficher-les-erreurs",level:3},{value:"Champs cach\xe9s",id:"champs-cach\xe9s",level:3},{value:"Utilisation dans les contr\xf4leurs",id:"utilisation-dans-les-contr\xf4leurs",level:2}],u={toc:m};function d(e){let{components:r,...n}=e;return(0,a.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"d\xe9finitions-des-formulaires"},"D\xe9finitions des formulaires"),(0,a.kt)("p",null,"Pour cr\xe9er un nouveau formulaire, cr\xe9ez une nouvelle classe qui \xe9tend ",(0,a.kt)("inlineCode",{parentName:"p"},"BaseForm")," puis impl\xe9mentez la m\xe9thode ",(0,a.kt)("inlineCode",{parentName:"p"},"buildForm")," pour d\xe9crire votre formulaire."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\nnamespace Thelia\\Form;\n\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\IntegerType;\nuse Symfony\\Component\\Validator\\Constraints;\nuse Symfony\\Component\\Validator\\Context\\ExecutionContextInterface;\nuse Thelia\\Core\\Translation\\Translator;\nuse Thelia\\Model\\AddressQuery;\nuse Thelia\\Model\\ModuleQuery;\nuse Thelia\\Module\\BaseModule;\n\nclass OrderDeliveryForm extends BaseForm\n{\n    protected function buildForm(): void\n    {\n        $this->formBuilder\n            ->add('delivery-address', IntegerType::class, [\n                'required' => true,\n                'constraints' => [\n                    new Constraints\\NotBlank(),\n                    new Constraints\\Callback(\n                        [$this, 'verifyDeliveryAddress']\n                    ),\n                ],\n            ])\n            ->add('delivery-module', IntegerType::class, [\n                'required' => true,\n                'constraints' => [\n                    new Constraints\\NotBlank(),\n                    new Constraints\\Callback(\n                        [$this, 'verifyDeliveryModule']\n                    ),\n                ],\n            ]);\n    }\n\n    public function verifyDeliveryAddress($value, ExecutionContextInterface $context): void\n    {\n        $address = AddressQuery::create()\n            ->findPk($value);\n\n        if (null === $address) {\n            $context->addViolation(Translator::getInstance()->trans('Address ID not found'));\n        }\n    }\n\n    public function verifyDeliveryModule($value, ExecutionContextInterface $context): void\n    {\n        $module = ModuleQuery::create()\n            ->filterActivatedByTypeAndId(BaseModule::DELIVERY_MODULE_TYPE, $value)\n            ->findOne();\n\n        if (null === $module) {\n            $context->addViolation(Translator::getInstance()->trans('Delivery module ID not found'));\n        } elseif (!$module->isDeliveryModule()) {\n            $context->addViolation(\n                sprintf(Translator::getInstance()->trans(\"delivery module %s is not a Thelia\\Module\\DeliveryModuleInterface\"), $module->getCode())\n            );\n        }\n    }\n}\n")),(0,a.kt)("p",null,"Pour plus d'informations sur les types de champs, vous pouvez vous r\xe9f\xe9rer \xe0 ",(0,a.kt)("a",{parentName:"p",href:"https://symfony.com/doc/current/reference/forms/types.html"},"Symfony form type documentation")),(0,a.kt)("h2",{id:"utilisation-dans-les-templates"},"Utilisation dans les templates"),(0,a.kt)("p",null,"Pour afficher le formulaire dans votre template vous aurez besoin du nom du formulaire, c'est le nom de votre module en minuscule + l'espace de nom complet et la classe de votre formulaire en snake_case (Convention de nommage des mots en minuscule, s\xe9par\xe9s par des tirets bas.).\nPar exemple, le nom du formulaire pour ",(0,a.kt)("inlineCode",{parentName:"p"},"VotreModule\\Form\\QuelquechoseForm.php")," sera ",(0,a.kt)("inlineCode",{parentName:"p"},"votremodule_form_quelquechose_form"),"\nIl peut \xeatre modifi\xe9 avec la fonction statique ",(0,a.kt)("inlineCode",{parentName:"p"},"getName")," mais nous ne conseillons pas de le faire,\ncar il est plus simple de deviner le nom d'un formulaire en lisant son espace de noms que d'aller dans la classe et de chercher la m\xe9thode.\nCela garantit \xe9galement un nom unique pour votre formulaire."),(0,a.kt)("h3",{id:"appeler-votre-formulaire"},"Appeler votre formulaire"),(0,a.kt)("p",null,"Tout d'abord, vous devez appeler le formulaire dont vous avez besoin en utilisant le bloc de formulaire :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-smarty"},'    {form name="yourmodule_form_something_form"}\n        ...\n    {/form}\n')),(0,a.kt)("p",null,"La r\xe9f\xe9rence du formulaire est maintenant disponible dans la variable ",(0,a.kt)("inlineCode",{parentName:"p"},"$form"),"."),(0,a.kt)("h3",{id:"afficher-le-formulaire"},"Afficher le formulaire"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-smarty"},'    {form name="yourmodule_form_something_form"}\n        <form method="post" action="{url path=\'your/target\'}" {form_enctype form=$form}>\n        ...\n        </form>\n    {/form}\n')),(0,a.kt)("h3",{id:"affichage-dun-champ-de-formulaire"},"Affichage d'un champ de formulaire"),(0,a.kt)("h4",{id:"champ-de-formulaire-personnalis\xe9"},"Champ de formulaire personnalis\xe9"),(0,a.kt)("p",null,"Pour afficher un champ, vous devez utiliser le bloc ",(0,a.kt)("inlineCode",{parentName:"p"},"{form_field}"),', et mettre le nom du champ que vous voulez afficher dans le param\xe8tre "field" :'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-smarty"},'{form name="thelia_form_order_delivery_form"}\n    <form method="post" action="{url path=\'your/target\'}" {form_enctype form=$form} >\n        {form_hidden_fields form=$form}\n\n        {form_field form=$form field="firstname"}\n           <label>{intl l="{$label}"}</label>\n           <input type="text" name="{$name}" value="{$value}" {$attr} />\n        {/form_field}\n\n        {form_field form=$form field="delivery_options"}\n            <select name="{$name}">\n                {foreach $choices as $choice}\n                    <option value="{$choice->value}">{$choice->label}</option>\n                {/foreach}\n            </select>\n        {/form_field}\n    </form>\n{/form}\n')),(0,a.kt)("p",null,"Valeurs disponibles dans le bloc ",(0,a.kt)("inlineCode",{parentName:"p"},"{form_field}")," :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$name")," : nom du champ utilis\xe9 dans la partie nom de votre saisie"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$value")," : valeur par d\xe9faut \xe0 afficher"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$data")," : l'attribut de donn\xe9es de la d\xe9finition du formulaire"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$type")," : le type de champ, tel que d\xe9fini dans la d\xe9finition du formulaire (choice, radio, number, text, textarea, etc.)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$checked")," : le statut de v\xe9rification (true / false) d'un champ radio ou d'une case \xe0 cocher"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$multiple")," : true si un champ de s\xe9lection peut avoir plusieurs valeurs s\xe9lectionn\xe9es"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$disabled")," : true si le champ est d\xe9sactiv\xe9, false sinon"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$read_only")," : true si le champ est en lecture seule, false sinon"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$max_length")," : la longueur maximale du champ"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$required")," : true si le champ est obligatoire, false sinon"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$label")," : label pour ce champ, peut \xeatre utilis\xe9 dans la balise html label par exemple"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$attr")," : tous les attributs d\xe9finis dans votre classe de formulaire, il peut s'agir de n'importe quel attribut HTML, comme un id, ou tout autre attribut comme la validation de formulaire HTML5 par exemple"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$attr_list")," : le tableau 'attr' de la d\xe9finition du formulaire"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$options")," : toutes les options disponibles pour ce champ. Cette variable est un tableau PHP."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$error")," : true si une erreur de validation a \xe9t\xe9 d\xe9tect\xe9e sur le champ"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$message")," : le message d'erreur, d\xe9fini si $error est vrai, vide sinon."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$choices")," : un tableau de choix disponibles. $choices n'est disponible que si votre champ a des choix d\xe9finis.")),(0,a.kt)("h4",{id:"champ-de-formulaire-automatique"},"Champ de formulaire automatique"),(0,a.kt)("p",null,"Pour acc\xe9l\xe9rer l'\xe9criture des formulaires dans les templates, Thelia fournit un plugin Smarty ",(0,a.kt)("inlineCode",{parentName:"p"},"render_form_field")," qui g\xe9n\xe8re automatiquement le code HTML du champ, et tout le code associ\xe9, comme le formatage et le rapport d'erreur."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-smarty"},'{form name="thelia_form_order_delivery_form"}\n    <form method="post" action="{url path=\'your/target\'}" {form_enctype form=$form} >\n        {form_hidden_fields form=$form}\n\n        {render_form_field form=$form field="firstname"}\n        {render_form_field form=$form field="delivery_options"}\n    </form>\n{/form}\n')),(0,a.kt)("h3",{id:"afficher-les-erreurs"},"Afficher les erreurs"),(0,a.kt)("p",null,"Si votre formulaire contient des erreurs, il affiche automatiquement la valeur d\xe9j\xe0 envoy\xe9e par l'utilisateur et peut ensuite afficher un message pour chaque champ contenant des erreurs. Le bloc ",(0,a.kt)("inlineCode",{parentName:"p"},"{form_field_error}")," est utilis\xe9 et fonctionne comme le bloc ",(0,a.kt)("inlineCode",{parentName:"p"},"{form_field}"),". Vous pouvez l'appeler en dehors du bloc ",(0,a.kt)("inlineCode",{parentName:"p"},"{form_field}")," :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-smarty"},'{form name="thelia_form_order_delivery_form"}\n    <form method="post" action="{url path=\'your/target\'}" {form_enctype form=$form} >\n        {form_hidden_fields form=$form}\n\n        {form_field form=$form field="firstname"}\n            {form_error form=$form.firstname}\n                {$message}\n            {/form_error}\n\n            <label>{intl l="{$label}"}</label>\n           <input type="text" name="{$name}" value="{$value}" {$attr} />\n        {/form_field}\n    </form>\n{/form}\n')),(0,a.kt)("h3",{id:"champs-cach\xe9s"},"Champs cach\xe9s"),(0,a.kt)("p",null,"Thelia utilise des champs cach\xe9s en interne. Pour afficher ces champs (et tous les champs cach\xe9s d\xe9finis dans votre formulaire), utilisez le plugin ",(0,a.kt)("inlineCode",{parentName:"p"},"form_hidden_fields"),".\nN'oubliez pas ceci, car il contient les donn\xe9es de validation CRSF :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-smarty"},'{form name="thelia_form_order_delivery_form"}\n    <form method="post" action="{url path=\'your/target\'}" {form_enctype form=$form} >\n         {form_hidden_fields form=$form}\n            ...\n    </form>\n{/form}\n')),(0,a.kt)("h2",{id:"utilisation-dans-les-contr\xf4leurs"},"Utilisation dans les contr\xf4leurs"),(0,a.kt)("p",null,"Les formulaires sont utiles pour valider les donn\xe9es soumises par les utilisateurs. Ceci est fait par deux fonctions dans les contr\xf4leurs :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"createForm")," qui cr\xe9e un objet formulaire"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"validateForm")," qui valide les donn\xe9es du formulaire")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace Front\\Controller;\n\nclass OrderController extends BaseFrontController\n{\n    public function submitRoute()\n    {\n        $form = $this->createForm(OrderDeliveryForm::getName);\n\n       try {\n            $data = $this->validateForm($form)->getData();\n\n            // Do what you want with submitted data\n\n        } catch (\\Exception $e) {\n           // Do something when the form is not valid\n        }\n    }\n}\n")))}d.isMDXComponent=!0}}]);
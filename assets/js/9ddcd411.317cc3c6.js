"use strict";(self.webpackChunkthelia=self.webpackChunkthelia||[]).push([[5488],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(n),c=r,v=m["".concat(u,".").concat(c)]||m[c]||p[c]||l;return n?a.createElement(v,i(i({ref:t},d),{},{components:n})):a.createElement(v,i({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2265:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={title:"Enrichir Thelia",sidebar_position:3,toc_max_heading_level:6},i="Cr\xe9er un module",o={unversionedId:"extending_thelia",id:"extending_thelia",title:"Enrichir Thelia",description:"Nous vous conseillons de cr\xe9er un seul module pour toute votre logique, ne cr\xe9ez pas un module par fonctionnalit\xe9 ou autre.",source:"@site/docs/extending_thelia.md",sourceDirName:".",slug:"/extending_thelia",permalink:"/docs/docs/extending_thelia",draft:!1,editUrl:"https://github.com/vz777/docs/edit/main/docs/extending_thelia.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Enrichir Thelia",sidebar_position:3,toc_max_heading_level:6},sidebar:"myAutogeneratedSidebar",previous:{title:"Dockerizer votre Thelia",permalink:"/docs/docs/getting_started/docker"},next:{title:"Propel",permalink:"/docs/docs/propel"}},u={},s=[{value:"Structure",id:"structure",level:2},{value:"Fichier de base (MyProject.php)",id:"fichier-de-base-myprojectphp",level:2},{value:"Contr\xf4leurs",id:"contr\xf4leurs",level:2},{value:"Modules de livraison",id:"modules-de-livraison",level:2},{value:"Impl\xe9mentation d&#39;un module de livraison",id:"impl\xe9mentation-dun-module-de-livraison",level:3},{value:"<code>isValidDelivery()</code>",id:"isvaliddelivery",level:4},{value:"<code>getPostage()</code>",id:"getpostage",level:4},{value:"Modules de paiement",id:"modules-de-paiement",level:2},{value:"Processus de paiement",id:"processus-de-paiement",level:3},{value:"Mod\xe8les standard",id:"mod\xe8les-standard",level:3},{value:"Impl\xe9mentation d&#39;un module de paiement",id:"impl\xe9mentation-dun-module-de-paiement",level:3},{value:"<code>isValidPayment()</code>",id:"isvalidpayment",level:4},{value:"<code>pay()</code>",id:"pay",level:4},{value:"<code>manageStockOnCreation()</code>",id:"managestockoncreation",level:4},{value:"Traitement des rappels du syst\xe8me de paiement",id:"traitement-des-rappels-du-syst\xe8me-de-paiement",level:3},{value:"Cr\xe9er une route de rappel de paiement",id:"cr\xe9er-une-route-de-rappel-de-paiement",level:4}],d={toc:s};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cr\xe9er-un-module"},"Cr\xe9er un module"),(0,r.kt)("p",null,":::attention"),(0,r.kt)("p",null,"Nous vous conseillons de cr\xe9er un seul module pour toute votre logique, ne cr\xe9ez pas un module par fonctionnalit\xe9 ou autre.\nLa seule raison de cr\xe9er un module s\xe9par\xe9 est si vous voulez le partager avec la communaut\xe9 \ud83d\ude09"),(0,r.kt)("p",null,":::"),(0,r.kt)("p",null,"Pour \xe9tendre Thelia, il faut cr\xe9er un module. G\xe9n\xe9ralement, pour le module principal, nous l'appelons avec le m\xeame nom que le projet."),(0,r.kt)("h2",{id:"structure"},"Structure"),(0,r.kt)("p",null,"Une commande peut vous aider \xe0 cr\xe9er les fichiers de base :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"php Thelia module:generate MyProject\n")),(0,r.kt)("p",null,"Cela g\xe9n\xe9rera cette structure dans le r\xe9pertoire ",(0,r.kt)("inlineCode",{parentName:"p"},"local\\modules")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\\MyProject\n  MyProject.php <- mandatory\n  composer.json\n  \\Config\n    config.xml   <- mandatory\n    module.xml   <- mandatory\n    routing.xml\n    schema.xml\n  ...\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"MyProject.php")," est le fichier de base de votre module, il vous aidera \xe0 mettre en place certains comportements."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"module.xml")," contient des informations sur le module comme la version du module, la compatibilit\xe9 et les d\xe9pendances avec d'autres modules, l'auteur, ..."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"config.xml")," pour d\xe9clarer vos services, \xe9couteurs d'\xe9v\xe9nements, boucles, formulaires, commandes ou hooks. Mais gr\xe2ce \xe0 l'autowiring, la plupart du temps vous n'aurez pas besoin de le faire."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"routing.xml")," pour lister les routes de votre application, comme config.xml ce fichier n'est plus tr\xe8s utile car nous pouvons d\xe9clarer les routes directement dans les contr\xf4leurs."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"schema.xml")," pour d\xe9crire la table de base de donn\xe9es li\xe9e \xe0 votre module."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"composer.json")," pour vous aider \xe0 partager votre module avec la communaut\xe9.")),(0,r.kt)("p",null,"Une fois le module cr\xe9\xe9, vous pouvez aller dans la liste des modules dans votre back-office et l'activer."),(0,r.kt)("h2",{id:"fichier-de-base-myprojectphp"},"Fichier de base (MyProject.php)"),(0,r.kt)("p",null,"Ce fichier doit \xe9tendre la classe ",(0,r.kt)("inlineCode",{parentName:"p"},"Thelia\\Module\\BaseModule")," (sauf pour les modules ",(0,r.kt)("a",{parentName:"p",href:"#delivery-modules"},"deliveries")," et ",(0,r.kt)("a",{parentName:"p",href:"#payment-modules"},"payments"),").\nPendant le cycle de vie d'un module, ces fonctions sont appel\xe9es et vous permettent d'appliquer votre propre logique en les \xe9crasant :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"install(ConnectionInterface $con = null);")," Cette m\xe9thode est appel\xe9e lorsque le plugin est install\xe9 pour la premi\xe8re fois."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"preActivation(ConnectionInterface $con = null);")," Cette m\xe9thode est appel\xe9e avant l'activation du module, et peut annuler l'activation en retournant false."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"postActivation(ConnectionInterface $con = null);")," Cette m\xe9thode est appel\xe9e apr\xe8s que le module ait \xe9t\xe9 activ\xe9 avec succ\xe8s."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"preDeactivation(ConnectionInterface $con = null);")," Cette m\xe9thode est appel\xe9e avant la d\xe9sactivation du module, et peut annuler la d\xe9sactivation en renvoyant false."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"postDeactivation(ConnectionInterface $con = null);")," Cette m\xe9thode est appel\xe9e apr\xe8s que le module ait \xe9t\xe9 d\xe9sactiv\xe9 avec succ\xe8s."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"update($currentVersion, $newVersion, ConnectionInterface $con = null);")," Cette m\xe9thode est appel\xe9e lors d'un rafra\xeechissement du module si la version pr\xe9c\xe9dente dans module.xml est diff\xe9rente de la version actuelle.")),(0,r.kt)("h2",{id:"contr\xf4leurs"},"Contr\xf4leurs"),(0,r.kt)("p",null,"Les contr\xf4leurs fonctionnent de la m\xeame mani\xe8re que les contr\xf4leurs Symfony sauf que dans Thelia il y a 2 types de contr\xf4leurs :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Les contr\xf4leurs front qui \xe9tendent ",(0,r.kt)("inlineCode",{parentName:"li"},"BaseFrontController")," lorsque vous appelez un rendu dans ce contr\xf4leur, Thelia cherchera le template dans le r\xe9pertoire frontOffice."),(0,r.kt)("li",{parentName:"ul"},"Les contr\xf4leurs admin qui \xe9tendent ",(0,r.kt)("inlineCode",{parentName:"li"},"BaseAdminController")," lorsque vous appelez un rendu dans celui-ci, Thelia cherchera le mod\xe8le dans le r\xe9pertoire backOffice et toutes les routes dans ces contr\xf4leurs sont automatiquement s\xe9curis\xe9es de sorte que seuls les administrateurs connect\xe9s peuvent y acc\xe9der.")),(0,r.kt)("h2",{id:"modules-de-livraison"},"Modules de livraison"),(0,r.kt)("h3",{id:"impl\xe9mentation-dun-module-de-livraison"},"Impl\xe9mentation d'un module de livraison"),(0,r.kt)("p",null,"Pour un module de livraison, la classe principale doit \xe9tendre l'interface ",(0,r.kt)("inlineCode",{parentName:"p"},"Thelia\\Module\\AbstractDeliveryModule")," et impl\xe9menter les m\xe9thodes ",(0,r.kt)("inlineCode",{parentName:"p"},"getPostage")," et ",(0,r.kt)("inlineCode",{parentName:"p"},"isValidDelivery"),"."),(0,r.kt)("h4",{id:"isvaliddelivery"},(0,r.kt)("inlineCode",{parentName:"h4"},"isValidDelivery()")),(0,r.kt)("p",null,"Cette m\xe9thode doit retourner un ",(0,r.kt)("inlineCode",{parentName:"p"},"bool\xe9en"),".\nSi ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", le module de livraison est affich\xe9 sur le front office par la boucle de livraison. Si ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),", le module n'est pas affich\xe9."),(0,r.kt)("p",null,"Ceci est utile si la solution de livraison a des limitations et ne peut pas \xeatre utilis\xe9e. Par exemple, Colissimo ne peut pas \xeatre utilis\xe9 si le poids total du panier du client est sup\xe9rieur \xe0 30 Kg."),(0,r.kt)("p",null,"Vous pouvez \xe9galement utiliser cette m\xe9thode pour restreindre l'acc\xe8s \xe0 votre module \xe0 certaines adresses IP pendant la phase de test."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"/**\n * This method is called by the Delivery loop, to check if the current module has to be displayed to the customer.\n * Override it to implements your delivery rules/\n *\n * If you return true, the delivery method will de displayed to the customer\n * If you return false, the delivery method will not be displayed\n *\n * @param Country $country the country to deliver to.\n *\n * @return boolean\n */\npublic abstract function isValidDelivery(Country $country)\n{\n    // Retrieve the cart weight\n    $cartWeight = $this->getRequest()->getSession()->getCart()->getWeight();\n\n    return $cartWeight <= 30;\n}\n")),(0,r.kt)("h4",{id:"getpostage"},(0,r.kt)("inlineCode",{parentName:"h4"},"getPostage()")),(0,r.kt)("p",null,"Cette m\xe9thode a un argument : le pays pour lequel le prix de livraison doit \xeatre calcul\xe9."),(0,r.kt)("p",null,"Si le module ne peut pas calculer le prix pour certaines raisons, il doit lancer une ",(0,r.kt)("inlineCode",{parentName:"p"},"DeliveryException"),", avec un message internationalis\xe9 qui d\xe9crit le probl\xe8me."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'/**\n * Calculate and return delivery price in the shop\'s default currency\n *\n * @param Country $country the country to deliver to.\n *\n * @return float the delivery price\n * @throws DeliveryException if the postage price cannot be calculated.\n */\npublic function getPostage(Country $country)\n{\n    if (! $this->isValidDelivery($country)) {\n        throw new DeliveryException(\n            Translator::getInstance()->trans("This module cannot be used on the current cart.")\n        );\n    }\n\n    $postage = $this->giveMeThePriceOfTheDeliveryInThisCountry($country);\n\n    return $postage;\n}\n')),(0,r.kt)("h2",{id:"modules-de-paiement"},"Modules de paiement"),(0,r.kt)("h3",{id:"processus-de-paiement"},"Processus de paiement"),(0,r.kt)("p",null,"Le paiement est disponible une fois que le client est connect\xe9, qu'il a des produits dans son panier et qu'il a choisi une m\xe9thode de livraison.\nVoici un processus de paiement typique :"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Le client s\xe9lectionne le module de paiement"),(0,r.kt)("li",{parentName:"ol"},'Le client d\xe9clenche le paiement (en cliquant sur le bouton "Payer" sur le front office)'),(0,r.kt)("li",{parentName:"ol"},"La m\xe9thode pay() du module de paiement s\xe9lectionn\xe9 est appel\xe9e par Thelia"),(0,r.kt)("li",{parentName:"ol"},"La m\xe9thode pay() g\xe8re le processus de paiement, qui peut consister (en fonction du module) \xe0 :",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Appeler un service web ou une API sp\xe9cifique \xe0 la plateforme."),(0,r.kt)("li",{parentName:"ul"},"Soumettre un formulaire contenant des param\xe8tres de paiement \xe0 une passerelle de paiement."),(0,r.kt)("li",{parentName:"ul"},"Rien (comme dans le cas d'un ch\xe8que ou d'un virement bancaire)."),(0,r.kt)("li",{parentName:"ul"},"Autre logique sp\xe9cifique."))),(0,r.kt)("li",{parentName:"ol"},"Si le paiement est r\xe9ussi, le client est redirig\xe9 vers une page de remerciement."),(0,r.kt)("li",{parentName:"ol"},'Si le paiement \xe9choue, le client est redirig\xe9 vers une page "Oops, sorry".')),(0,r.kt)("h3",{id:"mod\xe8les-standard"},"Mod\xe8les standard"),(0,r.kt)("p",null,"Dans le mod\xe8le standard du front-office, trois fichiers mod\xe8les fournissent une mani\xe8re commune et standard d'interagir avec le client :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"order-placed.html"),", pour indiquer au client que son paiement a \xe9t\xe9 effectu\xe9 avec succ\xe8s."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"order-failed.html"),", pour indiquer au client que son paiement a \xe9chou\xe9, et lui proposer de r\xe9essayer."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"order-payment-gateway.html"),", pour fournir un template standard pour soumettre des donn\xe9es \xe0 la passerelle de paiement. Ce fichier de template n'est pas utilis\xe9 par les modules qui n'envoient pas de donn\xe9es de formulaire \xe0 la passerelle de paiement.")),(0,r.kt)("p",null,"Ces mod\xe8les permettent une int\xe9gration imm\xe9diate du module dans un mod\xe8le de boutique, mais il est toujours possible pour un module de fournir ses propres mod\xe8les."),(0,r.kt)("h3",{id:"impl\xe9mentation-dun-module-de-paiement"},"Impl\xe9mentation d'un module de paiement"),(0,r.kt)("p",null,"Pour un module de paiement, la classe principale doit \xe9tendre l'interface ",(0,r.kt)("inlineCode",{parentName:"p"},"Thelia\\Module\\AbstractPaymentModule")," et impl\xe9menter les m\xe9thodes ",(0,r.kt)("inlineCode",{parentName:"p"},"isValidPayment")," et ",(0,r.kt)("inlineCode",{parentName:"p"},"pay"),"."),(0,r.kt)("h4",{id:"isvalidpayment"},(0,r.kt)("inlineCode",{parentName:"h4"},"isValidPayment()")),(0,r.kt)("p",null,"Cette m\xe9thode doit retourner un bool\xe9en. Si ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", le module de paiement est affich\xe9 sur le front office par la boucle de paiement. Si ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),", le module n'est pas affich\xe9."),(0,r.kt)("p",null,"Ceci est utile si la solution de paiement a des limitations et ne peut pas \xeatre utilis\xe9e. Par exemple, PayPal ne peut pas \xeatre utilis\xe9 s'il y a plus de 10 produits dans le panier du client et/ou si le montant total de la commande est sup\xe9rieur \xe0 8000 \u20ac."),(0,r.kt)("p",null,"Vous pouvez \xe9galement utiliser cette m\xe9thode pour restreindre l'acc\xe8s \xe0 votre module \xe0 certaines adresses IP pendant la phase de test."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"/**\n*\n* This method is called by the Payment loop.\n*\n* If you return true, the payment method will be displayed\n* If you return false, the payment method will not be displayed\n*\n* @return boolean\n*/\npublic function isValidPayment()\n{\n    // At this point, the order does not exist yet in the database. We have to get\n    // item count from the customer cart.\n\n    /** @var Session $session */\n    $session = $this->getRequest()->getSession();\n\n    /** @var Cart $cart */\n    $cart = $session->getCart();\n\n    $cartContentCount = $cart->countCartItems();\n\n    // BaseModule::getCurrentOrderTotalAmount() is a convenient methods\n    // to get order total from the current customer cart.\n\n    $orderTotal = $this->getCurrentOrderTotalAmount();\n\n    return $cartContentCount <= 10 && $orderTotal < 8000;\n}\n")),(0,r.kt)("h4",{id:"pay"},(0,r.kt)("inlineCode",{parentName:"h4"},"pay()")),(0,r.kt)("p",null,"La m\xe9thode ",(0,r.kt)("inlineCode",{parentName:"p"},"pay()")," est la m\xe9thode la plus utile d'un module de paiement : elle effectue le paiement de la commande en cours, conform\xe9ment aux exigences du syst\xe8me de paiement :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"soumettre un formulaire qui redirige le client vers la passerelle de paiement,"),(0,r.kt)("li",{parentName:"ul"},"invoquer un service web, une API sp\xe9cifique, etc. pour effectuer le paiement \xe0 l'int\xe9rieur de la m\xe9thode, et rediriger l'utilisateur vers le r\xe9sultat (succ\xe8s/\xe9chec) \xe0 la fin du processus"),(0,r.kt)("li",{parentName:"ul"},"lancer un processus sp\xe9cifique, g\xe9r\xe9 par un contr\xf4leur de module"),(0,r.kt)("li",{parentName:"ul"},"quels que soient vos besoins")),(0,r.kt)("p",null,"La commande en cours est pass\xe9e en param\xe8tre \xe0 la m\xe9thode ",(0,r.kt)("inlineCode",{parentName:"p"},"pay()"),"."),(0,r.kt)("p",null,"La m\xe9thode doit retourner un objet ",(0,r.kt)("inlineCode",{parentName:"p"},"Thelia\\Core\\HttpFoundation\\NResponse"),". Alternativement, en fonction de vos besoins sp\xe9cifiques, vous pouvez rediriger le client vers une autre URL."),(0,r.kt)("p",null,"Pour utiliser le mod\xe8le standard ",(0,r.kt)("inlineCode",{parentName:"p"},"order-payment-gateway.html"),", il suffit de g\xe9n\xe9rer un tableau de couples (nom, valeur) avec les donn\xe9es requises par la passerelle bancaire. Ensuite, envoyez-le au mod\xe8le avec l'URL de la passerelle de paiement en utilisant la m\xe9thode ",(0,r.kt)("inlineCode",{parentName:"p"},"generateGatewayFormResponse($order, $gatewayUrl, $formData)"),".\nLe formulaire sera automatiquement soumis et le client sera redirig\xe9 vers la passerelle de paiement."),(0,r.kt)("p",null,"Exemple pour le module de paiement Payzen :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"/**\n * Payment gateway invocation\n *\n * @param  Order $order processed order\n * @return Response the payment form\n */\nprotected function pay(Order $order)\n{\n    $payzen_params = $this->getPayzenParameters($order, 'SINGLE');\n\n    // Convert files into standard var => value array\n    $html_params = array();\n\n    /** @var PayzenField $field */\n    foreach($payzen_params as $name => $field) {\n        $html_params[$name] = $field->getValue();\n    }\n\n    // Be sure to have a valid platform URL, otherwise give up\n    if (false === $platformUrl = PayzenConfigQuery::read('platform_url', false)) {\n        throw new \\InvalidArgumentException(Translator::getInstance()->trans(\"The platform URL is not defined, please check Payzen module configuration.\"));\n    }\n\n    // Generate the form\n    return $this->generateGatewayFormResponse($order, $platformUrl, $html_params);\n}\n")),(0,r.kt)("p",null,"Si vous avez une API sp\xe9cifique, appelez-la avec les param\xe8tres requis, et en fonction du r\xe9sultat, redirigez vers la page de succ\xe8s ou d'\xe9chec."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"/**\n * Payment gateway invocation\n *\n * @param  Order $order processed order\n * @return Response the payment form\n */\nprotected function pay(Order $order)\n{\n    $api = new SamplePaymentApi();\n\n    // Invoke API\n    $result = $api->performPayment($with_some_parameters);\n\n    $returnUrl = $result === API::SUCCESS ? $this->getPaymentSuccessPageUrl(): $this->getPaymentFailurePageUrl();\n\n    Redirect::exec($returnUrl);\n }\n")),(0,r.kt)("h4",{id:"managestockoncreation"},(0,r.kt)("inlineCode",{parentName:"h4"},"manageStockOnCreation()")),(0,r.kt)("p",null,'Vous pouvez d\xe9cider avec cette fonction si votre module de paiement diminue le stock lorsque la commande est cr\xe9\xe9e ou lorsque le statut de la commande passe \xe0 "paid".'),(0,r.kt)("p",null,"Retourne ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," pour d\xe9cr\xe9menter le stock \xe0 la cr\xe9ation de la commande. C'est la valeur de retour par d\xe9faut.\nRetourne ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),' pour d\xe9cr\xe9menter le stock lorsque le statut de la commande passe \xe0 "paid".'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"/**\n* Decrement stock on order creation\n**/\npublic function manageStockOnCreation()\n{\n    return true;\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"/**\n* Decrement stock when status change to paid\n**/\npublic function manageStockOnCreation()\n{\n    return false;\n}\n")),(0,r.kt)("h3",{id:"traitement-des-rappels-du-syst\xe8me-de-paiement"},"Traitement des rappels du syst\xe8me de paiement"),(0,r.kt)("p",null,"La plupart des plateformes de paiement proposent un syst\xe8me de callback, pour notifier \xe0 votre module le r\xe9sultat du paiement. Le callback consiste souvent \xe0 appeler une URL sur votre serveur, l'URL de retour."),(0,r.kt)("h4",{id:"cr\xe9er-une-route-de-rappel-de-paiement"},"Cr\xe9er une route de rappel de paiement"),(0,r.kt)("p",null,"L'URL de rappel invoquera une m\xe9thode dans votre contr\xf4leur de paiement. Ce contr\xf4leur peut \xe9tendre la classe abstraite ",(0,r.kt)("inlineCode",{parentName:"p"},"Thelia\\Modules\\BasePaymentModuleController"),", qui fournit des m\xe9thodes utiles pour la confirmation des paiements :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"getLog()")," : renvoie une instance de ",(0,r.kt)("inlineCode",{parentName:"p"},"Tlog")," vers un fichier journal sp\xe9cifique au module. Le nom du fichier est ",(0,r.kt)("em",{parentName:"p"},"module_code"),".log, et il est situ\xe9 dans le r\xe9pertoire log. Par exemple, le fichier journal du module Payzen est ",(0,r.kt)("inlineCode",{parentName:"p"},"payzen.log"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"confirmPayment($orderId)")," : cette m\xe9thode permet de confirmer le paiement de la commande dont l'identifiant est ",(0,r.kt)("inlineCode",{parentName:"p"},"$orderId"),". La m\xe9thode met \xe0 jour le statut de la commande \xe0 PAID, et envoie les \xe9v\xe9nements n\xe9cessaires.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"cancelPayment($orderId)")," : certains syst\xe8mes de paiement peuvent notifier l'annulation d'une commande d\xe9j\xe0 pay\xe9e via l'URL de retour. Appelez cette m\xe9thode dans ce cas, pour annuler le paiement d'une commande d\xe9j\xe0 pay\xe9e avec l'ID ",(0,r.kt)("inlineCode",{parentName:"p"},"$orderId"),". Le statut de la commande sera mis \xe0 ",(0,r.kt)("inlineCode",{parentName:"p"},"NOT_PAID"),", et les \xe9v\xe9nements n\xe9cessaires seront envoy\xe9s.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"getOrder($orderId)")," : renvoie l'objet Order pour l'ID de la commande ",(0,r.kt)("inlineCode",{parentName:"p"},"$orderId"),", ou g\xe9n\xe8re une erreur si la commande n'a pas \xe9t\xe9 trouv\xe9e.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"redirectToSuccessPage($orderId)")," : redirige le client vers la page standard de paiement r\xe9ussi. Ne l'utilisez que si votre contr\xf4leur est invoqu\xe9 dans la port\xe9e de la requ\xeate du client.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"redirectToFailurePage($orderId)")," : redirige le client vers la page standard de paiement \xe9chou\xe9. Ne l'utilisez que si votre contr\xf4leur est invoqu\xe9 dans la port\xe9e de la requ\xeate du client."))),(0,r.kt)("p",null,"Votre contr\xf4leur doit impl\xe9menter la m\xe9thode ",(0,r.kt)("inlineCode",{parentName:"p"},"getModuleCode()"),', qui renvoie le code de votre module, c\'est-\xe0-dire le nom de la classe principale du module. Par exemple, "Payzen" pour le module Payzen.'),(0,r.kt)("p",null,"Votre contr\xf4leur doit effectuer toutes les v\xe9rifications n\xe9cessaires avant d'appeler ",(0,r.kt)("inlineCode",{parentName:"p"},"confirmPayment()"),", afin de s'assurer que le paiement du client est valide."))}p.isMDXComponent=!0}}]);